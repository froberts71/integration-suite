export `USERID=$(id -u $USER)` > docker_command.txt
export `GROUPID=$(id |awk 'BEGIN { FS = "[=(]" } ; { print $4 }')` >> docker_command.txt;
export `HERON_BUILD_HOST=ci-server-01` >> docker_command.txt;
export `HERON_BUILD_USER=release-agent1` >> docker_command.txt;
export `HERON_BUILD_VERSION=${env.gitParam}` >> docker_command.txt;
export `USER=build-server` >> docker_command.txt;
export `cd /src`  >> docker_command.txt;
export `python bazel_configure.py` >> docker_command.txt;
export `bazel build -c opt --config=ubuntu scripts/packages:binpkgs` >> docker_command.txt;
export `bazel build -c opt --config=ubuntu scripts/packages:tarpkgs` >> docker_command.txt;
export `chown $USERID:$GROUPID bazel-bin/scripts/packages/*` >> docker_command.txt;
export `mkdir /src/artifactss` >> docker_command.txt;
export `chown -R $USERID:$GROUPID /src/artifacts` >> docker_command.txt;
export `cp bazel-bin/scripts/packages/heron-api-install.sh /src/artifacts/` >> docker_command.txt;
export `cp bazel-bin/scripts/packages/heron-client-install.sh /src/artifacts/` >> docker_command.txt;
export `cp bazel-bin/scripts/packages/heron-tools-install.sh /src/artifacts/` >> docker_command.txt;
export `cp bazel-bin/scripts/packages/heron-api.tar.gz /src/artifacts/` >> docker_command.txt;
export `cp bazel-bin/scripts/packages/heron-core.tar.gz /src/artifacts/` >> docker_command.txt;
export `cp bazel-bin/scripts/packages/heron-client.tar.gz /src/artifacts/` >> docker_command.txt;
export `cp bazel-bin/scripts/packages/heron-tools.tar.gz /src/artifacts/` >> docker_command.txt;